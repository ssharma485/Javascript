'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _curry2 = require('./internal/_curry2.cjs');
var _arrayReduce = require('./internal/_arrayReduce.cjs');
var ap = require('./ap.cjs');
var curryN = require('./curryN.cjs');
var map = require('./map.cjs');

/**
 * "lifts" a function to be the specified arity, so that it may "map over" that
 * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig Number -> (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.lift, R.ap
 * @example
 *
 *      const madd3 = R.liftN(3, (...args) => R.sum(args));
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 */
var liftN = /*#__PURE__*/_curry2.default(function liftN(arity, fn) {
  var lifted = curryN.default(arity, fn);
  return curryN.default(arity, function () {
    return _arrayReduce.default(ap.default, map.default(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});
var liftN$1 = liftN;

exports.default = liftN$1;
//# sourceMappingURL=liftN.cjs.map
